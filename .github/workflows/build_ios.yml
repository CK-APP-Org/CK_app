name: Build (& Deploy to TestFlight) iOS APP

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'CK_app/**'
      - '.github/workflows/build_ios.yml'

jobs:
  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./CK_app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: maxim-lobanov/setup-xcode@v1
        with: 
          xcode-version: latest-stable

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'yarn'
          cache-dependency-path: 'CK_app/yarn.lock'

      - name: Install dependencies
        run: |
          npm install -g yarn @quasar/cli
          yarn install --frozen-lockfile

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build Quasar app for iOS (Capacitor)
        run: |
          yarn ios
          cd src-capacitor
          npx cap update ios
          npx cap copy ios
          xcodebuild -workspace './ios/App/App.xcworkspace' -scheme App -destination generic/platform=iOS -archivePath App.xcarchive archive
          xcodebuild archive -archivePath App.xcarchive -exportArchive -exportOptionsPlist ./archive.plist -exportPath output -allowProvisioningUpdates

      - name: Archive iOS build output
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: CK_app/src-capacitor/output
  deploy-ios:
    name: Deploy iOS to TestFlight
    needs: build-ios
    runs-on: macos-latest
    if: startsWith(github.event.head_commit.message, '[deploy]') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Download iOS build output
        uses: actions/download-artifact@v5
        with:
          name: ios-build
      - name: 'Upload app to TestFlight'
        uses: apple-actions/upload-testflight-build@v3
        with: 
          app-path: ./App.ipa
          issuer-id: ${{ vars.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ vars.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
